import{_ as s,c as a,o as n,a6 as e}from"./chunks/framework.DJOiR4ue.js";const h=JSON.parse('{"title":"Monorepo","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"architect/monorepo02.md","filePath":"architect/monorepo02.md","lastUpdated":1720842133000}'),p={name:"architect/monorepo02.md"},l=e(`<h1 id="monorepo" tabindex="-1">Monorepo <a class="header-anchor" href="#monorepo" aria-label="Permalink to &quot;Monorepo&quot;">​</a></h1><h2 id="实施" tabindex="-1">实施 <a class="header-anchor" href="#实施" aria-label="Permalink to &quot;实施&quot;">​</a></h2><h3 id="项目初始化" tabindex="-1">项目初始化 <a class="header-anchor" href="#项目初始化" aria-label="Permalink to &quot;项目初始化&quot;">​</a></h3><p>monorepo只能用 <code>pnpm</code> 或 <code>yarn</code> 作为包管理器，不能使用 <code>npm</code> 。推荐使用 <code>pnpm</code> 。</p><ul><li><ol><li>项目初始化</li></ol></li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><ol start="2"><li>配置文件</li></ol></li></ul><p>在项目根目录下创建 <code>pnpm-workspace.yaml</code> 文件，用于配置monorepo的项目结构。</p><p><a href="https://pnpm.io/pnpm-workspace_yaml" target="_blank" rel="noreferrer">https://pnpm.io/pnpm-workspace_yaml</a></p><p>举例：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>packages:</span></span>
<span class="line"><span>  //pnpm-workspace.yaml</span></span>
<span class="line"><span>  # all packages in direct subdirs of packages/</span></span>
<span class="line"><span>  - &#39;server&#39;</span></span>
<span class="line"><span>  - &#39;config&#39;</span></span>
<span class="line"><span>  - &#39;app&#39;</span></span>
<span class="line"><span>  - &#39;backmanger&#39;</span></span>
<span class="line"><span>  - &#39;fs&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>然后在根目录下执行 <code>pnpm install</code> 安装依赖。可复用的包会被自动提取到根目录的 <code>node_modules</code> 目录下。不能复用的包会被安装到各个子包的 <code>node_modules</code> 目录下。</p><ul><li><ol start="3"><li>在每个子包中的package.json文件中修改name加上@。</li></ol></li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>  //appp子目录里的package.json</span></span>
<span class="line"><span>  &quot;name&quot;: &quot;@questionbank/app&quot;,</span></span>
<span class="line"><span>  //其他配置</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>  //backmanger子目录里的package.json</span></span>
<span class="line"><span>  &quot;name&quot;: &quot;@backmanger/manager&quot;,</span></span>
<span class="line"><span>  //其他配置</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>  //config子目录里的package.json</span></span>
<span class="line"><span>  &quot;name&quot;: &quot;@questionbank/config&quot;,</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>  //fs子目录里的package.json</span></span>
<span class="line"><span>  &quot;name&quot;: &quot;@questionbank/fs&quot;,</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>  //server子目录里的package.json</span></span>
<span class="line"><span>  &quot;name&quot;: &quot;@questionbank/index&quot;,</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li><ol start="4"><li>多个项目如何使用同一个模块</li></ol></li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pnpm add 要添加的模块 --filter 目标模块</span></span>
<span class="line"><span></span></span>
<span class="line"><span>比如: pnpm add @common/utils --filter @questionbank/app</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>使用同一个模块后，只需要在该模块内修改即可，其他项目都可以直接使用。</p><ul><li><ol start="5"><li>后面进入每个子包目录分别执行 <code>npm run dev</code> 启动项目即可。</li></ol></li></ul>`,22),i=[l];function r(o,t,c,d,u,b){return n(),a("div",null,i)}const g=s(p,[["render",r]]);export{h as __pageData,g as default};
